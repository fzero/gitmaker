#!/bin/bash
# gitmaker 0.5 by Fabio FZero

# Halt on all errors
set -e

# Main vars
SSHDOMAIN="$1"
REPO="$2"


# Functions

function usage () {
cat << EOF

gitmaker - creates a git repository on a ssh host and clones it locally.

Usage:

  $ gitmaker <ssh host> <repo>

Where:

  <ssh host> is the remote ssh host in the user@host format.  If you need to
  supply additional parameters (e.g. port), enclose them all in quotes.

  <repo> is the repository to be created.

NOTE: It's STRONGLY recommended that you setup key-based SSH login to
      use git over SSH - unless you like to type your password a lot!

EOF
}


function test_params () {
  if [ "$SSHDOMAIN" == "" ] || [ "$REPO" == "" ]; then
    usage
    exit 1
  fi
}


function test_remote_git () {
  echo -n ">>> Testing if git exists in the server... "
  if [ "$(ssh $SSHDOMAIN 'git --version &> /dev/null && echo OK')" == "OK" ]; then
    echo "OK!"
  else
    cat << EOF
FAIL!

You must install git on your server first. You seem to be out of luck,
since EVEN DREAMHOST has git installed. Unbelievable, eh?

If you have root access on the remote machine, just install it. If you don't,
you can still try to compile it with PREFIX=/home/(your user) and see if it
works.

EOF
    exit 1
  fi
}


# On to business

test_params
test_remote_git

echo ">>> Creating the remote repository..."
ssh $SSHDOMAIN "mkdir -p ~/git/$REPO.git && cd ~/git/$REPO.git && git --bare init"
echo ">>> Creating the local clone and pushing the first commit..."
mkdir -p $REPO
cd $REPO
git init
git remote add origin ssh://$SSHDOMAIN/~/git/$REPO.git
touch .gitignore
git add .
git commit -m "Created new repo: $REPO"
git push origin master
cat << EOF >>.git/config
[branch "master"]
  remote = origin
  merge = refs/heads/master
EOF

cat << EOF

----------

Your new git repository '$REPO' is ready and initialized at
ssh://$SSHDOMAIN/~/git/$REPO.git

To clone it from another location, use:
$ git clone ssh://$SSHDOMAIN/~/git/$REPO [local folder]

EOF

